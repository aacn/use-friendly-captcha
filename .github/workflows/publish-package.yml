name: Create Release and Publish

# Trigger the create release workflow
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yarn install and build rollup
        run: |
          yarn install:frozen
          yarn build
      - uses: actions/upload-artifact@main
        with:
          name: artifact-built-by-yarn
          path: dist/

  test:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@main
        with:
          name: artifact-built-by-yarn
          path: dist/
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install for testing
        run: |
          yarn install:test:frozen
      - name: run unit tests
        working-directory: ./playground
        run: |
          yarn test
      - name: run cypress
        uses: cypress-io/github-action@v4.2.0
        with:
          working-directory: ./playground
          start: yarn start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
        env:
          REACT_APP_FC_DEMO_SITE_KEY: ${{secrets.AACN_USE_FRIENDLY_CAPTCHA_FC_DEMO_SITE_KEY}}
          CI: true


  release:
    needs: test
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@main
        with:
          name: artifact-built-by-yarn
          path: dist/

      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: release
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@main
        with:
          name: artifact-built-by-yarn
          path: dist/

      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@{{github.event.repository.owner.login}}'

      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.event.ref }}
          regex: '(\.?\d)+'

      - run: echo 'Using ${{steps.regex-match.outputs.match}}'
      - run: cat package.json

      - name: Update package.json version
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: version
          value: ${{ steps.regex-match.outputs.match }}

      - name: Update package.json name
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: name
          value: '@${{ github.event.repository.full_name }}'

      - name: Update package.json git repo url
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: repository.url
          value: 'ssh://git@github.com/${{ github.event.repository.full_name }}.git'

      - name: Update package.json private=false
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: private
          value: false
          parse_json: true

      - run: echo 'Compare to:'
      - run: cat package.json

      - run: yarn install --frozen-lockfile
      - run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
